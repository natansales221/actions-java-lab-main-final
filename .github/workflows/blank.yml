name: CI/CD Pipeline


on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Application
        run: |
          # Commands to build your application
          # Example: ./build.sh

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: path/to/artifact

  stackhawk:
    permissions:
      contents: read
      security-events: write
    name: StackHawk
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start your service
        run: ./your-service.sh &

      - name: Run HawkScan
        uses: stackhawk/hawkscan-action@4c3258cd62248dac6d9fe91dd8d45928c697dee0
        continue-on-error: true
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}
          codeScanningAlerts: true
          githubToken: ${{ github.token }}

  codacy-security-scan:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    needs:
      - build
      - stackhawk
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@d840f886c4bd4edc059706d09c6a1586111c540b
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs:
      - codacy-security-scan
    permissions:
      actions: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['java-kotlin']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Build with Maven
        run: mvn clean install

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"

  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy to Netlify
        run: npx netlify-cli deploy --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

          

  evidence:
    name: Evidence
    runs-on: ubuntu-latest
    needs:
      - deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Show Running Processes
        run: ps aux

      - name: Send Evidence to Netlify
        run: curl -X POST -d '{"message":"Evidence from GitHub Actions"}'https://creative-strudel-21e26d.netlify.app
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
