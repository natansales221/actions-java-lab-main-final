name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest


    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build Application
      run: |


    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: path/to/artifact

  stackhawk:
    permissions:
      contents: read
      security-events: write
    name: StackHawk
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start your service
        run: ./your-service.sh &          

      - name: Run HawkScan
        uses: stackhawk/hawkscan-action@4c3258cd62248dac6d9fe91dd8d45928c697dee0
        continue-on-error: true        
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}
          codeScanningAlerts: true
          githubToken: ${{ github.token }}

  codacy-security-scan:
    permissions:
      contents: read 
      security-events: write
      actions: read 
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@d840f886c4bd4edc059706d09c6a1586111c540b
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
  analyze:
    name: Analyze

    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java-kotlin' ]


    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    needs: 
     - codacy-security-scan
     - stackhawk

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Deploy to Server
      #run: |
      run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Add the SSH key to the known hosts
          ssh-keyscan 13.92.34.6 >> ~/.ssh/known_hosts
          # Deploy the artifact to the server
          ssh azureadmin@13.92.34.6 "mkdir -p /app/data"
          scp -r ~/work/actions-python-lab/actions-python-lab/* azureadmin@13.92.34.6:/app/data/
  evidence:
    name: Evidence
    runs-on: ubuntu-latest

    needs: deploy

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Show Running Processes
      run: ps aux
