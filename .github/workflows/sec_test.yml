name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: python-publish-app-artifact
        path: ./

  deploy:
    runs-on: ubuntu-latest  
    needs: build  
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: python-publish-app-artifact

      - name: Deploy to server
        env:
          DEPLOY_KEY: ${{ secrets.SENAC_AZURE_VM }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add the SSH key to the known hosts
          ssh-keyscan 13.92.34.6 >> ~/.ssh/known_hosts

          # Deploy the artifact to the server
          ssh azureadmin@13.92.34.6 "mkdir -p /app/data"
          scp -r ~/work/actions-python-lab/actions-python-lab/* azureadmin@13.92.34.6:/app/data/
